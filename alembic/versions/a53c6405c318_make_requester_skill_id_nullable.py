"""Make requester_skill_id nullable

Revision ID: a53c6405c318
Revises: 
Create Date: 2025-01-27 05:25:15.152412

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a53c6405c318'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('SKILL_SHARE_REQUESTS')
    op.drop_table('SKILL_AVAILABLE_TIME')
    op.drop_table('REVIEWS')
    op.drop_table('NOTIFICATION')
    op.drop_table('ONGOING_SKILL_SHARES')
    op.drop_table('SKILLS')
    op.drop_table('TOKEN')
    op.drop_table('USER')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('USER',
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('gender', postgresql.ENUM('MALE', 'FEMALE', 'OTHER', name='gendere'), autoincrement=False, nullable=True),
    sa.Column('allow_login', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='USER_pkey'),
    sa.UniqueConstraint('deleted_at', name='USER_deleted_at_key'),
    sa.UniqueConstraint('email', name='USER_email_key'),
    sa.UniqueConstraint('language', name='USER_language_key'),
    sa.UniqueConstraint('phone', name='USER_phone_key'),
    sa.UniqueConstraint('username', name='USER_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('TOKEN',
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('blacklisted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['USER.id'], name='TOKEN_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='TOKEN_pkey'),
    sa.UniqueConstraint('deleted_at', name='TOKEN_deleted_at_key')
    )
    op.create_table('SKILLS',
    sa.Column('skill_category', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('skill_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('skill_level', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('skill_description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['USER.id'], name='SKILLS_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='SKILLS_pkey'),
    sa.UniqueConstraint('deleted_at', name='SKILLS_deleted_at_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ONGOING_SKILL_SHARES',
    sa.Column('skill_share_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['skill_share_id'], ['SKILL_SHARE_REQUESTS.id'], name='ONGOING_SKILL_SHARES_skill_share_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ONGOING_SKILL_SHARES_pkey'),
    sa.UniqueConstraint('deleted_at', name='ONGOING_SKILL_SHARES_deleted_at_key')
    )
    op.create_table('NOTIFICATION',
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', postgresql.ENUM('TEXT', 'MIXED', 'IMAGE', name='notificationtypee'), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['USER.id'], name='NOTIFICATION_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='NOTIFICATION_pkey'),
    sa.UniqueConstraint('deleted_at', name='NOTIFICATION_deleted_at_key')
    )
    op.create_table('REVIEWS',
    sa.Column('reviewer_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('reviewee_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('skill_share_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('rating', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['reviewee_id'], ['USER.id'], name='REVIEWS_reviewee_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['USER.id'], name='REVIEWS_reviewer_id_fkey'),
    sa.ForeignKeyConstraint(['skill_share_id'], ['SKILL_SHARE_REQUESTS.id'], name='REVIEWS_skill_share_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='REVIEWS_pkey'),
    sa.UniqueConstraint('deleted_at', name='REVIEWS_deleted_at_key')
    )
    op.create_table('SKILL_AVAILABLE_TIME',
    sa.Column('available_day', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('end_time', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['SKILLS.id'], name='SKILL_AVAILABLE_TIME_skill_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='SKILL_AVAILABLE_TIME_pkey'),
    sa.UniqueConstraint('deleted_at', name='SKILL_AVAILABLE_TIME_deleted_at_key')
    )
    op.create_table('SKILL_SHARE_REQUESTS',
    sa.Column('requester_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('provider_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('requester_skill_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('provider_skill_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['USER.id'], name='SKILL_SHARE_REQUESTS_provider_id_fkey'),
    sa.ForeignKeyConstraint(['provider_skill_id'], ['SKILLS.id'], name='SKILL_SHARE_REQUESTS_provider_skill_id_fkey'),
    sa.ForeignKeyConstraint(['requester_id'], ['USER.id'], name='SKILL_SHARE_REQUESTS_requester_id_fkey'),
    sa.ForeignKeyConstraint(['requester_skill_id'], ['SKILLS.id'], name='SKILL_SHARE_REQUESTS_requester_skill_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='SKILL_SHARE_REQUESTS_pkey'),
    sa.UniqueConstraint('deleted_at', name='SKILL_SHARE_REQUESTS_deleted_at_key')
    )
    # ### end Alembic commands ###
